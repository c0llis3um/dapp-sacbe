{"ast":null,"code":"var _jsxFileName = \"/Users/jalcantara/Downloads/eth-dev/sacbe-eth-app/packages/react-app/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Body, Button, Header, Image, Link } from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal';\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport GET_TRANSFERS from \"./graphql/subgraph\";\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider(); // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n\n  const ceaErc20 = new Contract(addresses.ceaErc20, abis.erc20, defaultProvider); // A pre-defined address that owns some CEAERC20 tokens\n\n  const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");\n  console.log({\n    tokenBalance: tokenBalance.toString()\n  });\n}\n\nfunction WalletButton({\n  provider,\n  loadWeb3Modal\n}) {\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!provider) {\n        loadWeb3Modal();\n      } else {\n        logoutOfWeb3Modal();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, !provider ? \"Connect Wallet\" : \"Disconnect Wallet\");\n}\n\nfunction App() {\n  const {\n    loading,\n    error,\n    data,\n    account,\n    active\n  } = useQuery(GET_TRANSFERS);\n  const [provider, setProvider] = useState();\n  /* Open wallet selection modal. */\n\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n  /* If user has loaded a wallet before, load it automatically. */\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  React.useEffect(() => {\n    if (!loading && !error && data && data.transfers) {\n      console.log({\n        transfers: data.transfers\n      });\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, \"Account: \", account), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WalletButton, {\n    provider: provider,\n    loadWeb3Modal: loadWeb3Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jalcantara/Downloads/eth-dev/sacbe-eth-app/packages/react-app/src/App.js"],"names":["React","useCallback","useEffect","useState","Contract","Web3Provider","getDefaultProvider","useQuery","Body","Button","Header","Image","Link","web3Modal","logoutOfWeb3Modal","logo","addresses","abis","GET_TRANSFERS","readOnChainData","defaultProvider","ceaErc20","erc20","tokenBalance","balanceOf","console","log","toString","WalletButton","provider","loadWeb3Modal","App","loading","error","data","account","active","setProvider","newProvider","connect","cachedProvider","transfers"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { Body, Button, Header, Image, Link } from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal'\nimport logo from \"./ethereumLogo.png\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport GET_TRANSFERS from \"./graphql/subgraph\";\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider();\n  // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n  const ceaErc20 = new Contract(addresses.ceaErc20, abis.erc20, defaultProvider);\n  // A pre-defined address that owns some CEAERC20 tokens\n  const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");\n  console.log({ tokenBalance: tokenBalance.toString() });\n}\n\nfunction WalletButton({ provider, loadWeb3Modal }) {\n  return (\n    <Button\n      onClick={() => {\n        if (!provider) {\n          loadWeb3Modal();\n        } else {\n          logoutOfWeb3Modal();\n        }\n      }}\n    >\n      {!provider ? \"Connect Wallet\" : \"Disconnect Wallet\"}\n    </Button>\n  );\n}\n\nfunction App() {\n  const { loading, error, data, account, active } = useQuery(GET_TRANSFERS);\n  const [provider, setProvider,] = useState();\n\n  /* Open wallet selection modal. */\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n\n  /* If user has loaded a wallet before, load it automatically. */\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  React.useEffect(() => {\n    if (!loading && !error && data && data.transfers) {\n      console.log({ transfers: data.transfers });\n    }\n  }, [loading, error, data]);\n\n  return (\n    <div>\n   <div>Account: {account}</div>\n      <Header>\n        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} />\n      </Header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}